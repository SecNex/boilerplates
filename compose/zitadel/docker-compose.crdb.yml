version: "3.8"

networks:
  zitadel:
    external: false
    name: zitadel
  proxy:
    external: false
    name: proxy

services:
  crdb:
    container_name: core.auth.zitadel.crdb
    restart: always
    image: cockroachdb/cockroach:v22.2.2
    command: 'start-single-node --advertise-addr crdb'
    volumes:
    # Path /opt/docker/core/auth/zitadel/crdb/*
      - crdb_data:/cockroach/cockroach-data
      - crdb_certs:/cockroach/certs
      - zitadel_certs:/zitadel-certs
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health?ready=1" ]
      interval: '10s'
      timeout: '30s'
      retries: 5
      start_period: '20s'
    networks:
      - zitadel
  
  zitadel:
    container_name: core.auth.zitadel
    restart: always
    image: 'ghcr.io/zitadel/zitadel:stable'
    command: 'start-from-init --masterkeyFromEnv --tlsMode external'
    env_file:
      - ./zitadel.env
    depends_on:
      crdb:
        condition: 'service_healthy'
    volumes:
      - ./machinekey:/machinekey
      - zitadel_certs:/crdb-certs:ro
    networks:
      - zitadel
      - proxy

volumes:
  crdb_data:
  crdb_certs:
  zitadel_certs:

---

version: '3.8'

networks:
  proxy:
    external: true
    name: proxy

services:
  app:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: 'core.proxy'
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    networks:
      - proxy

